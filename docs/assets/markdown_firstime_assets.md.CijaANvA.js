import{_ as a,z as e,m as t,ap as o}from"./chunks/framework.DmedEOU1.js";const i="/koishi-plugin-adapter-iirose/assets/assets-why.BzSlsuXd.png",c="/koishi-plugin-adapter-iirose/assets/assets-2025-10-02_19-49-59.kcAZnFKi.png",r="/koishi-plugin-adapter-iirose/assets/assets-2025-10-02_20-00-38.WcYnR28c.png",k=JSON.parse('{"title":"assets 服务配置","description":"","frontmatter":{},"headers":[],"relativePath":"markdown/firstime/assets.md","filePath":"markdown/firstime/assets.md","lastUpdated":1759407294000}'),d={name:"markdown/firstime/assets.md"};function p(l,s,n,h,m,u){return t(),e("div",null,[...s[0]||(s[0]=[o('<h1 id="assets-服务配置" tabindex="-1">assets 服务配置 <a class="header-anchor" href="#assets-服务配置" aria-label="Permalink to &quot;assets 服务配置&quot;">​</a></h1><p><strong>本页内容将说明如何配置<code>assets</code>服务。</strong></p><h2 id="重要" tabindex="-1">重要 <a class="header-anchor" href="#重要" aria-label="Permalink to &quot;重要&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>机器人以及各类脚本 需要将富媒体内容上传到第三方图床 以减少蔷薇的服务器的访问压力。</p></div><p><img src="'+i+'" alt=""></p><h2 id="第一步-搜索安装-assets" tabindex="-1">第一步：搜索安装 <code>assets-</code> <a class="header-anchor" href="#第一步-搜索安装-assets" aria-label="Permalink to &quot;第一步：搜索安装 `assets-`&quot;">​</a></h2><p>打开插件市场搜索</p><div class="language-code vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">code</span><pre class="shiki shiki-themes github-light one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>assets-</span></span></code></pre></div><p><img src="'+c+'" alt=""></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>不同的<code>assets</code>实现插件 提供的服务相同（提供图床实现、文件床实现），<br></p><p>根据你的需求，安装任意的一个插件即可</p></div><h2 id="第二步-进行插件配置" tabindex="-1">第二步：进行插件配置 <a class="header-anchor" href="#第二步-进行插件配置" aria-label="Permalink to &quot;第二步：进行插件配置&quot;">​</a></h2><h3 id="_2-1-配置-assets-插件" tabindex="-1">2.1 配置 <code>assets-*</code> 插件 <a class="header-anchor" href="#_2-1-配置-assets-插件" aria-label="Permalink to &quot;2.1 配置 `assets-*` 插件&quot;">​</a></h3><p>每个 <code>assets-*</code> 插件可能有不同的配置要求，</p><p>比如可能是开箱即用的，也可能要求登录某平台账号的，也可能要求填入key、token等。</p><p>请根据对应 <code>assets-*</code> 插件的项目说明、文档来进行配置。</p><hr><h3 id="_2-2-开启-assets-插件" tabindex="-1">2.2 开启 <code>assets-*</code> 插件 <a class="header-anchor" href="#_2-2-开启-assets-插件" aria-label="Permalink to &quot;2.2 开启 `assets-*` 插件&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>注意，开启插件之前，需要先关闭默认开启的 <code>assets-local</code> 插件。</p></div><p>配置成功后，开启插件，即可提供 <code>assets</code> 服务</p><blockquote><p>为了方便，这里我们使用 <code>koishi-plugin-assets-xinyewapi</code> 作为演示。</p></blockquote><p><img src="'+r+'" alt=""></p><h2 id="🎉-完成" tabindex="-1">🎉 完成！ <a class="header-anchor" href="#🎉-完成" aria-label="Permalink to &quot;🎉 完成！&quot;">​</a></h2><p>至此，你已经成功为适配器接入了图床服务！</p><p>现在你的适配器可以支持图片等富媒体的发送了！</p>',24)])])}const b=a(d,[["render",p]]);export{k as __pageData,b as default};
